class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_a = [86, 87, 210, 151, 228, 248, 193, 170, 52, 169, 131, 182, 91, 68, 102, 152, 178, 112, 176, 110, 156, 109, 92, 191, 174, 226, 231, 117, 199, 164, 230, 145, 191, 131, 230, 230, 123, 121, 201, 140, 117, 66, 50, 92, 104, 183, 76, 53, 80, 174]
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.insertionSort(self.input_a),[50, 52, 53, 66, 68, 76, 80, 86, 87, 91, 92, 92, 102, 104, 109, 110, 112, 117, 117, 121, 123, 131, 131, 140, 145, 151, 152, 156, 164, 169, 170, 174, 174, 176, 178, 182, 183, 191, 191, 193, 199, 201, 210, 226, 228, 230, 230, 230, 231, 248])
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    