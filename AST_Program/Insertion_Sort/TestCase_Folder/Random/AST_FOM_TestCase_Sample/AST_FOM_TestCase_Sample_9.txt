class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_a = [58, 108, 172, 227, 56, 209, 189, 123, 158, 206, 197, 175, 161, 232, 119, 221, 214, 94, 215, 90, 76, 196, 182, 158, 207, 217, 222, 228, 223, 216, 223, 103, 127, 157, 68, 172, 200, 114, 197, 196, 240, 231, 176, 149, 81, 88, 221, 124, 185, 249]
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.insertionSort(self.input_a),[56, 58, 68, 76, 81, 88, 90, 94, 103, 108, 114, 119, 123, 124, 127, 149, 157, 158, 158, 161, 172, 172, 175, 176, 182, 185, 189, 196, 196, 197, 197, 200, 206, 207, 209, 214, 215, 216, 217, 221, 221, 222, 223, 223, 227, 228, 231, 232, 240, 249])
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    