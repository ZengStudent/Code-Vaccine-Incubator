class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_data = [1, 2, 5, 6, 6, 7, 7, 8, 8, 12, 14, 14, 21, 24, 28, 30, 35, 37, 39, 39, 43, 43, 45, 47, 47, 47, 50, 56, 58, 59, 61, 62, 65, 66, 67, 70, 70, 75, 77, 78, 86, 88, 88, 88, 93, 94, 97, 98, 98, 99]
        self.input_start = 0
        self.input_maxlen = 49
        self.aim = 70
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.binary_search(self.input_data,self.input_start,self.input_maxlen,self.aim),35)
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    