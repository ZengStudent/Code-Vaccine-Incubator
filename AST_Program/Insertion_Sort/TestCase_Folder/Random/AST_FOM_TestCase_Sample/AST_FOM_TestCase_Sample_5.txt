class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_a = [76, 195, 210, 163, 130, 67, 161, 234, 132, 83, 230, 72, 109, 97, 51, 117, 78, 184, 160, 122, 124, 129, 214, 187, 105, 202, 101, 51, 248, 68, 75, 164, 78, 170, 229, 59, 198, 250, 240, 202, 175, 60, 116, 178, 90, 211, 149, 228, 140, 88]
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.insertionSort(self.input_a),[51, 51, 59, 60, 67, 68, 72, 75, 76, 78, 78, 83, 88, 90, 97, 101, 105, 109, 116, 117, 122, 124, 129, 130, 132, 140, 149, 160, 161, 163, 164, 170, 175, 178, 184, 187, 195, 198, 202, 202, 210, 211, 214, 228, 229, 230, 234, 240, 248, 250])
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    