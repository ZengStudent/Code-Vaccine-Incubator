class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_data = [6, 7, 9, 10, 12, 12, 14, 14, 16, 17, 17, 20, 23, 24, 24, 26, 29, 29, 31, 33, 34, 34, 34, 34, 35, 38, 40, 41, 43, 54, 54, 54, 59, 63, 65, 68, 69, 70, 75, 78, 79, 80, 84, 86, 91, 95, 95, 99, 99, 100]
        self.aim = 26
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.FibonacciSearch(self.input_data,self.aim),15)
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    