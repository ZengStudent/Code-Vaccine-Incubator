class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_a = [1612, 1624, 1626, 1626, 1629, 1630, 1630, 1631, 1631, 1633, 1635, 1635, 1637, 1637, 1638, 1641, 1641, 1641, 1642, 1643, 1645, 1645, 1645, 1648, 1648, 1648, 1651, 1651, 1652, 1652, 1654, 1660, 1660, 1663, 1667, 1667, 1667, 1667, 1667, 1673, 1674, 1674, 1674, 1676, 1677, 1686, 1686, 1686, 1689, 1689]
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.median(self.input_a),1648.0)
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    