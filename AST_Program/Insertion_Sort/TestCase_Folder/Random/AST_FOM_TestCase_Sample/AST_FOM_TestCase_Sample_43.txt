class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_a = [212, 101, 82, 131, 164, 115, 246, 202, 177, 216, 211, 135, 179, 180, 215, 217, 196, 147, 141, 182, 134, 210, 97, 157, 56, 50, 105, 220, 129, 94, 69, 197, 228, 59, 197, 104, 249, 90, 89, 247, 219, 104, 84, 200, 218, 122, 239, 90, 107, 132]
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.insertionSort(self.input_a),[50, 56, 59, 69, 82, 84, 89, 90, 90, 94, 97, 101, 104, 104, 105, 107, 115, 122, 129, 131, 132, 134, 135, 141, 147, 157, 164, 177, 179, 180, 182, 196, 197, 197, 200, 202, 210, 211, 212, 215, 216, 217, 218, 219, 220, 228, 239, 246, 247, 249])
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    