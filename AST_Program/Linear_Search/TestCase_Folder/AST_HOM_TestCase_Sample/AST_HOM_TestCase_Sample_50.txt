class TestStringMethods(unittest.TestCase):
        def setUp(self):
            self.input_data = [2, 3, 3, 7, 7, 9, 14, 20, 22, 24, 26, 27, 29, 30, 32, 33, 41, 42, 43, 44, 51, 52, 56, 56, 59, 64, 64, 65, 66, 66, 67, 71, 73, 74, 76, 81, 81, 82, 86, 87, 89, 89, 91, 96, 96, 97, 97, 98, 98, 100]
            self.aim = 27
            self.result = '-'
            
            print('--------------Setup--------------')

        def test_tri(self):
            print('--------------test_tri--------------')
            try :
                self.assertEqual(hom.linear_search(self.input_data,self.input_start,self.input_maxlen,self.aim),11)
                print('Pass')
                self.result='Pass'
            except AssertionError:
                print('AssertionError')
                self.result = 'Fail'
            except:
                print('ExceptError')
                self.result = 'Fail'
            finally:
                path = 'AST_TestCase_Result_Folder/AST_HOM_TestCase_Result_Folder/AST_HOM_TestCase_Result_Folder_' + str(folder_numbers) + '/'
                trial_path = path + 'AST_HOM_TestCase_Result_Folder_' + str(folder_numbers) + '_' + str(trail_numbers) + '/'
                #  新建資料夾
                if(os.path.isdir(path) == False):
                    os.mkdir(path)
                #  新建資料夾
                if(os.path.isdir(trial_path) == False):
                    os.mkdir(trial_path)
                file_dir = trial_path +'AST_HOM_TestCase_Result_'+str(order)+'.txt'
                f = open(file_dir, 'w+', encoding='UTF-8')
                f.write(self.result)
                f.seek(0)
                f.close() 

if __name__ == '__main__':
    unittest.main()
        