class TestStringMethods(unittest.TestCase):
        def setUp(self):
            self.input_data = [4, 4, 5, 6, 10, 10, 11, 14, 14, 23, 24, 25, 26, 27, 27, 27, 30, 32, 32, 36, 36, 38, 42, 42, 45, 52, 56, 57, 58, 60, 64, 65, 65, 68, 71, 72, 73, 75, 76, 78, 79, 81, 82, 83, 85, 88, 90, 93, 99, 100]
            self.aim = 24
            self.result = '-'
            
            print('--------------Setup--------------')

        def test_tri(self):
            print('--------------test_tri--------------')
            try :
                self.assertEqual(hom.FibonacciSearch(self.input_data,self.aim),10)
                print('Pass')
                self.result='Pass'
            except AssertionError:
                print('AssertionError')
                self.result = 'Fail'
            except:
                print('ExceptError')
                self.result = 'Fail'
            finally:
                path = 'AST_TestCase_Result_Folder/AST_HOM_TestCase_Result_Folder/AST_HOM_TestCase_Result_Folder_' + str(folder_numbers) + '/'
                trial_path = path + 'AST_HOM_TestCase_Result_Folder_' + str(folder_numbers) + '_' + str(trail_numbers) + '/'
                #  新建資料夾
                if(os.path.isdir(path) == False):
                    os.mkdir(path)
                #  新建資料夾
                if(os.path.isdir(trial_path) == False):
                    os.mkdir(trial_path)
                file_dir = trial_path +'AST_HOM_TestCase_Result_'+str(order)+'.txt'
                f = open(file_dir, 'w+', encoding='UTF-8')
                f.write(self.result)
                f.seek(0)
                f.close() 

if __name__ == '__main__':
    unittest.main()
        