class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_a = [155, 174, 146, 215, 81, 175, 78, 54, 113, 249, 215, 99, 62, 114, 134, 177, 182, 231, 164, 204, 99, 135, 115, 226, 159, 72, 246, 142, 233, 103, 90, 80, 229, 157, 121, 121, 191, 210, 186, 103, 246, 129, 168, 112, 182, 238, 150, 217, 176, 159]
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.insertionSort(self.input_a),[54, 62, 72, 78, 80, 81, 90, 99, 99, 103, 103, 112, 113, 114, 115, 121, 121, 129, 134, 135, 142, 146, 150, 155, 157, 159, 159, 164, 168, 174, 175, 176, 177, 182, 182, 186, 191, 204, 210, 215, 215, 217, 226, 229, 231, 233, 238, 246, 246, 249])
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    