class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_a = [101, 69, 120, 75, 107, 230, 122, 219, 143, 58, 182, 123, 151, 179, 64, 190, 215, 158, 245, 101, 184, 243, 92, 99, 100, 202, 232, 199, 171, 93, 115, 97, 141, 225, 153, 146, 115, 111, 68, 120, 237, 221, 183, 242, 167, 141, 124, 107, 59, 175]
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.insertionSort(self.input_a),[58, 59, 64, 68, 69, 75, 92, 93, 97, 99, 100, 101, 101, 107, 107, 111, 115, 115, 120, 120, 122, 123, 124, 141, 141, 143, 146, 151, 153, 158, 167, 171, 175, 179, 182, 183, 184, 190, 199, 202, 215, 219, 221, 225, 230, 232, 237, 242, 243, 245])
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    