class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_a = [93, 181, 157, 57, 201, 195, 219, 50, 193, 219, 135, 226, 73, 239, 51, 162, 133, 236, 165, 88, 109, 79, 51, 85, 231, 184, 142, 222, 158, 109, 76, 91, 64, 146, 166, 102, 214, 214, 208, 200, 125, 140, 167, 152, 236, 238, 196, 55, 77, 119]
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.insertionSort(self.input_a),[50, 51, 51, 55, 57, 64, 73, 76, 77, 79, 85, 88, 91, 93, 102, 109, 109, 119, 125, 133, 135, 140, 142, 146, 152, 157, 158, 162, 165, 166, 167, 181, 184, 193, 195, 196, 200, 201, 208, 214, 214, 219, 219, 222, 226, 231, 236, 236, 238, 239])
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    