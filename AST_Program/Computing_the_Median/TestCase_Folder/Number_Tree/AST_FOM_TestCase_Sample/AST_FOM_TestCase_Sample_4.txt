class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_a = [238, 249, 249, 249, 250, 251, 251, 256, 260, 260, 260, 262, 262, 263, 266, 266, 268, 271, 271, 271, 271, 272, 276, 277, 277, 280, 281, 281, 281, 281, 282, 282, 282, 283, 285, 287, 287, 290, 290, 291, 291, 294, 294, 294, 295, 295, 296, 297, 297, 299]
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.median(self.input_a),278.5)
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    