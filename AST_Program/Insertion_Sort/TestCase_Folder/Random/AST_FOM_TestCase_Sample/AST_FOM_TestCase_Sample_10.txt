class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_a = [250, 238, 197, 88, 86, 105, 167, 61, 177, 172, 226, 179, 164, 108, 95, 117, 236, 87, 174, 125, 189, 243, 200, 212, 92, 228, 113, 68, 171, 169, 207, 126, 203, 146, 129, 103, 97, 69, 119, 225, 168, 173, 203, 92, 80, 57, 114, 200, 133, 71]
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.insertionSort(self.input_a),[57, 61, 68, 69, 71, 80, 86, 87, 88, 92, 92, 95, 97, 103, 105, 108, 113, 114, 117, 119, 125, 126, 129, 133, 146, 164, 167, 168, 169, 171, 172, 173, 174, 177, 179, 189, 197, 200, 200, 203, 203, 207, 212, 225, 226, 228, 236, 238, 243, 250])
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    