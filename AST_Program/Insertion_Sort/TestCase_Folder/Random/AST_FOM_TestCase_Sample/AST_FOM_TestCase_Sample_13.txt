class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_a = [216, 112, 183, 197, 79, 157, 120, 100, 237, 102, 91, 78, 182, 115, 170, 121, 134, 53, 136, 220, 62, 238, 64, 240, 59, 77, 127, 110, 190, 84, 220, 217, 163, 213, 204, 209, 130, 203, 101, 179, 162, 170, 95, 126, 78, 72, 156, 211, 65, 195]
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.insertionSort(self.input_a),[53, 59, 62, 64, 65, 72, 77, 78, 78, 79, 84, 91, 95, 100, 101, 102, 110, 112, 115, 120, 121, 126, 127, 130, 134, 136, 156, 157, 162, 163, 170, 170, 179, 182, 183, 190, 195, 197, 203, 204, 209, 211, 213, 216, 217, 220, 220, 237, 238, 240])
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    