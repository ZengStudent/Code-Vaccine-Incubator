class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_a = [185, 74, 150, 53, 181, 107, 96, 137, 87, 237, 75, 227, 212, 208, 84, 151, 184, 77, 51, 158, 116, 70, 68, 199, 208, 82, 143, 155, 205, 172, 131, 188, 64, 168, 60, 145, 79, 186, 132, 214, 82, 63, 121, 93, 127, 97, 67, 158, 189, 123]
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.insertionSort(self.input_a),[51, 53, 60, 63, 64, 67, 68, 70, 74, 75, 77, 79, 82, 82, 84, 87, 93, 96, 97, 107, 116, 121, 123, 127, 131, 132, 137, 143, 145, 150, 151, 155, 158, 158, 168, 172, 181, 184, 185, 186, 188, 189, 199, 205, 208, 208, 212, 214, 227, 237])
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    