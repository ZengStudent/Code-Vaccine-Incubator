class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_a = [159, 202, 129, 210, 121, 78, 67, 177, 215, 72, 51, 183, 128, 71, 125, 113, 147, 93, 236, 85, 56, 228, 56, 157, 67, 247, 108, 233, 114, 219, 216, 91, 70, 117, 130, 78, 163, 196, 142, 114, 132, 136, 68, 224, 125, 244, 176, 235, 188, 90]
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.insertionSort(self.input_a),[51, 56, 56, 67, 67, 68, 70, 71, 72, 78, 78, 85, 90, 91, 93, 108, 113, 114, 114, 117, 121, 125, 125, 128, 129, 130, 132, 136, 142, 147, 157, 159, 163, 176, 177, 183, 188, 196, 202, 210, 215, 216, 219, 224, 228, 233, 235, 236, 244, 247])
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    