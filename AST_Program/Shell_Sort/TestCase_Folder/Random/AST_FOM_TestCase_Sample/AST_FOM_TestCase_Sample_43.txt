class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_a = [440, -517, -390, -765, 614, 778, -6, 144, 806, 89, -665, -181, 604, 89, -159, -488, 11, -345, -868, -209, -461, -291, 201, -234, -801, 121, 608, -528, 260, 174, 38, -45, -876, -522, 319, 239, 824, 803, -218, -378, 683, -332, 379, -967, 510, 89, 254, -821, -50, -408]
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.shellSort(self.input_a),[-967, -876, -868, -821, -801, -765, -665, -528, -522, -517, -488, -461, -408, -390, -378, -345, -332, -291, -234, -218, -209, -181, -159, -50, -45, -6, 11, 38, 89, 89, 89, 121, 144, 174, 201, 239, 254, 260, 319, 379, 440, 510, 604, 608, 614, 683, 778, 803, 806, 824])
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    