class TestStringMethods(unittest.TestCase):
        def setUp(self):
            self.input_a = 93
            self.input_b = 181
            self.input_c = 157
            self.result = '-'
            
            print('--------------Setup--------------')

        def test_tri(self):
            print('--------------test_tri--------------')
            try :
                self.assertEqual(hom.insertionSort(self.input_a,self.input_b,self.input_c),'[50, 51, 51, 55, 57, 64, 73, 76, 77, 79, 85, 88, 91, 93, 102, 109, 109, 119, 125, 133, 135, 140, 142, 146, 152, 157, 158, 162, 165, 166, 167, 181, 184, 193, 195, 196, 200, 201, 208, 214, 214, 219, 219, 222, 226, 231, 236, 236, 238, 239]')
                print('Pass')
                self.result='Pass'
            except AssertionError:
                print('AssertionError')
                self.result = 'Fail'
            except:
                print('ExceptError')
                self.result = 'Fail'
            finally:
                path = 'AST_TestCase_Result_Folder/AST_HOM_TestCase_Result_Folder/AST_HOM_TestCase_Result_Folder_' + str(folder_numbers) + '/'
                trial_path = path + 'AST_HOM_TestCase_Result_Folder_' + str(folder_numbers) + '_' + str(trail_numbers) + '/'
                #  新建資料夾
                if(os.path.isdir(path) == False):
                    os.mkdir(path)
                #  新建資料夾
                if(os.path.isdir(trial_path) == False):
                    os.mkdir(trial_path)
                file_dir = trial_path +'AST_HOM_TestCase_Result_'+str(order)+'.txt'
                f = open(file_dir, 'w+', encoding='UTF-8')
                f.write(self.result)
                f.seek(0)
                f.close() 

if __name__ == '__main__':
    unittest.main()
        