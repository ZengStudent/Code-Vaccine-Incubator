class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_a = [207, 79, 65, 59, 232, 192, 84, 245, 240, 100, 187, 237, 136, 151, 71, 165, 67, 160, 103, 165, 169, 213, 110, 196, 222, 220, 64, 104, 72, 227, 224, 76, 100, 55, 199, 133, 125, 250, 215, 175, 143, 121, 168, 237, 232, 170, 88, 246, 184, 218]
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.insertionSort(self.input_a),[55, 59, 64, 65, 67, 71, 72, 76, 79, 84, 88, 100, 100, 103, 104, 110, 121, 125, 133, 136, 143, 151, 160, 165, 165, 168, 169, 170, 175, 184, 187, 192, 196, 199, 207, 213, 215, 218, 220, 222, 224, 227, 232, 232, 237, 237, 240, 245, 246, 250])
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    