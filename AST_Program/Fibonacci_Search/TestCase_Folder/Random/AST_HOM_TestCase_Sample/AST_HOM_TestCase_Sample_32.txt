class TestStringMethods(unittest.TestCase):
        def setUp(self):
            self.input_data = [4, 5, 6, 8, 11, 12, 15, 20, 29, 31, 38, 38, 40, 46, 48, 48, 50, 50, 50, 51, 53, 56, 57, 57, 58, 62, 65, 66, 67, 68, 68, 73, 74, 74, 75, 75, 76, 79, 79, 83, 84, 87, 88, 89, 91, 92, 93, 93, 96, 99]
            self.aim = 65
            self.result = '-'
            
            print('--------------Setup--------------')

        def test_tri(self):
            print('--------------test_tri--------------')
            try :
                self.assertEqual(hom.FibonacciSearch(self.input_data,self.aim),26)
                print('Pass')
                self.result='Pass'
            except AssertionError:
                print('AssertionError')
                self.result = 'Fail'
            except:
                print('ExceptError')
                self.result = 'Fail'
            finally:
                path = 'AST_TestCase_Result_Folder/AST_HOM_TestCase_Result_Folder/AST_HOM_TestCase_Result_Folder_' + str(folder_numbers) + '/'
                trial_path = path + 'AST_HOM_TestCase_Result_Folder_' + str(folder_numbers) + '_' + str(trail_numbers) + '/'
                #  新建資料夾
                if(os.path.isdir(path) == False):
                    os.mkdir(path)
                #  新建資料夾
                if(os.path.isdir(trial_path) == False):
                    os.mkdir(trial_path)
                file_dir = trial_path +'AST_HOM_TestCase_Result_'+str(order)+'.txt'
                f = open(file_dir, 'w+', encoding='UTF-8')
                f.write(self.result)
                f.seek(0)
                f.close() 

if __name__ == '__main__':
    unittest.main()
        