class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_a = [1, 10, 15, 15, 30, 30, 37, 37, 37, 37, 55, 63, 63, 74, 74, 74, 74, 74, 75, 76, 79, 84, 84, 84, 84, 85, 85, 86, 87, 97, 100, 110, 110, 122, 134, 134, 139, 139, 140, 140, 140, 140, 144, 144, 148, 151, 151, 158, 159, 159]
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.median(self.input_a),84.5)
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    