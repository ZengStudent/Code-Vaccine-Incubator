class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_a = [2619, 2622, 2622, 2629, 2629, 2632, 2632, 2636, 2640, 2640, 2645, 2645, 2645, 2645, 2649, 2651, 2657, 2662, 2662, 2664, 2671, 2672, 2672, 2682, 2682, 2688, 2688, 2689, 2689, 2703, 2705, 2705, 2705, 2706, 2716, 2719, 2720, 2720, 2720, 2725, 2727, 2728, 2728, 2728, 2734, 2735, 2735, 2739, 2739, 2739]
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.median(self.input_a),2685.0)
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    