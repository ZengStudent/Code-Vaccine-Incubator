class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_data = [1, 3, 3, 5, 6, 8, 8, 9, 10, 11, 15, 16, 17, 23, 27, 27, 29, 30, 30, 35, 37, 38, 43, 48, 49, 56, 57, 59, 60, 62, 63, 63, 65, 65, 69, 70, 70, 70, 71, 75, 76, 77, 77, 78, 79, 83, 83, 91, 92, 95]
        self.input_start = 0
        self.input_maxlen = 49
        self.aim = 70
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.binary_search(self.input_data,self.input_start,self.input_maxlen,self.aim),37)
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    