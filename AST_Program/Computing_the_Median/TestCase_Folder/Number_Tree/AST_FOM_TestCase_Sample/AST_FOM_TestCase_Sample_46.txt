class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_a = [2616, 2630, 2635, 2641, 2641, 2647, 2648, 2648, 2648, 2648, 2648, 2651, 2651, 2652, 2653, 2657, 2657, 2660, 2661, 2662, 2663, 2664, 2664, 2664, 2666, 2666, 2668, 2670, 2671, 2671, 2671, 2673, 2674, 2674, 2680, 2681, 2687, 2687, 2687, 2690, 2690, 2692, 2696, 2696, 2696, 2701, 2707, 2707, 2708, 2714]
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.median(self.input_a),2666.0)
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    