class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_a = [1610, 1614, 1617, 1618, 1618, 1619, 1621, 1623, 1625, 1625, 1626, 1626, 1629, 1629, 1629, 1633, 1633, 1633, 1633, 1633, 1634, 1634, 1634, 1634, 1635, 1635, 1635, 1635, 1636, 1636, 1636, 1637, 1639, 1639, 1639, 1640, 1640, 1642, 1643, 1644, 1649, 1649, 1649, 1649, 1649, 1650, 1650, 1659, 1659, 1659]
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.median(self.input_a),1635.0)
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    