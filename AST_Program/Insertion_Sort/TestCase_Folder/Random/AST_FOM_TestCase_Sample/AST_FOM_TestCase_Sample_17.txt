class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_a = [176, 241, 194, 151, 214, 140, 238, 116, 110, 68, 87, 171, 108, 240, 212, 144, 114, 203, 191, 112, 162, 59, 145, 160, 145, 57, 242, 91, 68, 59, 140, 140, 108, 225, 155, 86, 130, 56, 134, 148, 198, 64, 106, 58, 170, 226, 62, 172, 100, 54]
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.insertionSort(self.input_a),[54, 56, 57, 58, 59, 59, 62, 64, 68, 68, 86, 87, 91, 100, 106, 108, 108, 110, 112, 114, 116, 130, 134, 140, 140, 140, 144, 145, 145, 148, 151, 155, 160, 162, 170, 171, 172, 176, 191, 194, 198, 203, 212, 214, 225, 226, 238, 240, 241, 242])
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    