class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_a = [69, 87, 249, 135, 133, 98, 206, 79, 144, 158, 75, 86, 179, 73, 87, 186, 158, 59, 163, 203, 178, 212, 249, 80, 212, 133, 88, 109, 158, 85, 140, 138, 51, 147, 198, 192, 99, 74, 250, 53, 197, 53, 113, 161, 68, 63, 74, 222, 210, 85]
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.insertionSort(self.input_a),[51, 53, 53, 59, 63, 68, 69, 73, 74, 74, 75, 79, 80, 85, 85, 86, 87, 87, 88, 98, 99, 109, 113, 133, 133, 135, 138, 140, 144, 147, 158, 158, 158, 161, 163, 178, 179, 186, 192, 197, 198, 203, 206, 210, 212, 212, 222, 249, 249, 250])
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    