class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_a = [181, 224, 86, 213, 197, 232, 100, 80, 90, 135, 232, 174, 140, 138, 138, 158, 183, 207, 98, 196, 67, 84, 208, 124, 105, 190, 225, 213, 186, 188, 105, 93, 135, 63, 137, 201, 147, 231, 104, 209, 122, 134, 101, 80, 53, 131, 77, 213, 175, 148]
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.insertionSort(self.input_a),[53, 63, 67, 77, 80, 80, 84, 86, 90, 93, 98, 100, 101, 104, 105, 105, 122, 124, 131, 134, 135, 135, 137, 138, 138, 140, 147, 148, 158, 174, 175, 181, 183, 186, 188, 190, 196, 197, 201, 207, 208, 209, 213, 213, 213, 224, 225, 231, 232, 232])
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    