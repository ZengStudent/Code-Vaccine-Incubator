class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_a = [98, 154, 92, 103, 54, 96, 58, 69, 57, 97, 164, 110, 58, 153, 225, 159, 68, 207, 95, 233, 208, 83, 58, 106, 247, 75, 193, 237, 141, 218, 85, 62, 56, 216, 221, 186, 242, 68, 65, 78, 179, 52, 78, 212, 169, 85, 249, 198, 171, 113]
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.insertionSort(self.input_a),[52, 54, 56, 57, 58, 58, 58, 62, 65, 68, 68, 69, 75, 78, 78, 83, 85, 85, 92, 95, 96, 97, 98, 103, 106, 110, 113, 141, 153, 154, 159, 164, 169, 171, 179, 186, 193, 198, 207, 208, 212, 216, 218, 221, 225, 233, 237, 242, 247, 249])
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    