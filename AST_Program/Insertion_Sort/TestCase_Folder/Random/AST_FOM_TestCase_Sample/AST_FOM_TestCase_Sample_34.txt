class TestStringMethods(unittest.TestCase):
    def setUp(self):
        self.input_a = [59, 156, 105, 72, 164, 200, 168, 165, 228, 233, 104, 154, 195, 180, 70, 157, 64, 238, 197, 51, 213, 156, 220, 67, 147, 220, 225, 221, 79, 208, 132, 102, 145, 234, 121, 79, 179, 94, 191, 187, 101, 112, 164, 222, 236, 164, 175, 83, 93, 79]
        self.result = '-'
        
        print('--------------Setup--------------')

    def test_tri(self):
        print('--------------test_tri--------------')
        try :
            self.assertEqual(amutant.insertionSort(self.input_a),[51, 59, 64, 67, 70, 72, 79, 79, 79, 83, 93, 94, 101, 102, 104, 105, 112, 121, 132, 145, 147, 154, 156, 156, 157, 164, 164, 164, 165, 168, 175, 179, 180, 187, 191, 195, 197, 200, 208, 213, 220, 220, 221, 222, 225, 228, 233, 234, 236, 238])
            print('Pass')
            self.result='Pass'
        except AssertionError:
            print('AssertionError')
            self.result = 'Fail'
        except:
            print('ExceptError')
            self.result = 'Fail'
        finally:
            path = 'AST_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder/AST_FOM_TestCase_Result_Folder_'+ str(folder_numbers) + '/'
            #  新建資料夾
            if(os.path.isdir(path) == False):
                os.mkdir(path)
            file_dir = path +'AST_FOM_TestCase_Result_'+str(order)+'.txt'
            f = open(file_dir, 'w+', encoding='UTF-8')
            f.write(self.result)
            f.seek(0)
            f.close() 

if __name__ == '__main__':
    unittest.main()
    